{"ast":null,"code":"var _jsxFileName = \"E:\\\\MediKeep\\\\navigation\\\\index.tsx\";\nimport { NavigationContainer, DefaultTheme, DarkTheme } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport * as React from \"react\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport Auth from \"../screens/Auth\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return React.createElement(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === \"dark\" ? DarkTheme : DefaultTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(RootNavigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n}\nvar Stack = createStackNavigator();\n\nfunction RootNavigator() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: Auth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NotFound\",\n    component: NotFoundScreen,\n    options: {\n      title: \"Oops!\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["E:/MediKeep/navigation/index.tsx"],"names":["NavigationContainer","DefaultTheme","DarkTheme","createStackNavigator","React","NotFoundScreen","LinkingConfiguration","Auth","Navigation","colorScheme","Stack","RootNavigator","headerShown","title"],"mappings":";AAAA,SACEA,mBADF,EAEEC,YAFF,EAGEC,SAHF,QAIO,0BAJP;AAKA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAGA,OAAOC,cAAP;AAGA,OAAOC,oBAAP;AACA,OAAOC,IAAP;AAIA,eAAe,SAASC,UAAT,OAIZ;AAAA,MAHDC,WAGC,QAHDA,WAGC;AACD,SACE,oBAAC,mBAAD;AACE,IAAA,OAAO,EAAEH,oBADX;AAEE,IAAA,KAAK,EAAEG,WAAW,KAAK,MAAhB,GAAyBP,SAAzB,GAAqCD,YAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD;AAID,IAAMS,KAAK,GAAGP,oBAAoB,EAAlC;;AAEA,SAASQ,aAAT,GAAyB;AACvB,SACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,aAAa,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEL,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAEF,cAFb;AAGE,IAAA,OAAO,EAAE;AAAEQ,MAAAA,KAAK,EAAE;AAAT,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAUD","sourcesContent":["import {\r\n  NavigationContainer,\r\n  DefaultTheme,\r\n  DarkTheme,\r\n} from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport { ColorSchemeName } from \"react-native\";\r\n\r\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\r\nimport { RootStackParamList } from \"../types\";\r\nimport BottomTabNavigator from \"./BottomTabNavigator\";\r\nimport LinkingConfiguration from \"./LinkingConfiguration\";\r\nimport Auth from \"../screens/Auth\";\r\n\r\n// If you are not familiar with React Navigation, we recommend going through the\r\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\r\nexport default function Navigation({\r\n  colorScheme,\r\n}: {\r\n  colorScheme: ColorSchemeName;\r\n}) {\r\n  return (\r\n    <NavigationContainer\r\n      linking={LinkingConfiguration}\r\n      theme={colorScheme === \"dark\" ? DarkTheme : DefaultTheme}\r\n    >\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n// A root stack navigator is often used for displaying modals on top of all other content\r\n// Read more here: https://reactnavigation.org/docs/modal\r\nconst Stack = createStackNavigator<RootStackParamList>();\r\n\r\nfunction RootNavigator() {\r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen name=\"Root\" component={Auth} />\r\n      <Stack.Screen\r\n        name=\"NotFound\"\r\n        component={NotFoundScreen}\r\n        options={{ title: \"Oops!\" }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}